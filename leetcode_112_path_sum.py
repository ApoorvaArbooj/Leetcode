# -*- coding: utf-8 -*-
"""Leetcode 112 Path Sum.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nj70xNVZC0kzo1Us48zMtjDfbve4iajt
"""

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:
        if not root:
            return False
        stack = []
        stack.append([root,targetSum-root.val])
        while stack:
            current_node, remaining_sum = stack.pop()
            if current_node.left:
                stack.append([current_node.left,remaining_sum-current_node.val])
            if current_node.right:
                stack.append([current_node.right,remaining_sum-current_node.val])
            if not current_node.left and not current_node.right and remaining_sum == 0:
                return True
        return False