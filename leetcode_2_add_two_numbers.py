# -*- coding: utf-8 -*-
"""Leetcode 2 Add Two Numbers.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KVUkhvnVJ9bQIo4LeksvZTiHhAOXzWDS
"""

# Definition for singly-linked list.
class ListNode:
  def __init__(self, val=0, next=None):
    self.val = val
    self.next = next
    
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        currNode1 = l1
        currNode2 = l2
        result_carry= 0
        dummy_Head = ListNode(0)
        currNode = dummy_Head
        while currNode1 or currNode2:
            if not currNode1:
                value1 = 0
            else:
                value1 = currNode1.val
            if not currNode2:
                value2 = 0
            else:
                value2 = currNode2.val
            
            result_carry,result_sum = divmod(value1+value2+result_carry,10)
            
            currNode.next = ListNode(result_sum)
            currNode = currNode.next
            
            if currNode1:
                currNode1 = currNode1.next
            if currNode2:
                currNode2 = currNode2.next
        
        if result_carry >= 1:
            currNode.next = ListNode(result_carry)
        return dummy_Head.next