# -*- coding: utf-8 -*-
"""Leetcode 554 Brick Wall.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZikLjOHymV_5y6lFZOxc3aHeOz0NTmRz
"""

class Solution:
    def leastBricks(self, wall):
        max_width = sum(wall[0])
        wall_dict = {}
        def get_partition(bricks):
            moving_sum = 0
            for brick in bricks:
                moving_sum += brick
                if moving_sum != 0 and moving_sum < max_width:
                    if moving_sum not in wall_dict:
                        wall_dict[moving_sum] = 1
                    else:
                        wall_dict[moving_sum] += 1
            
        for w in wall:
            get_partition(w)

        min_bricks = 0
        for val in wall_dict.values():
            min_bricks = max(min_bricks,val)

        return len(wall) - min_bricks

s = Solution()

print(s.leastBricks(wall = [[1,2,2,1],[3,1,2],[1,3,2],[2,4],[3,1,2],[1,3,1,1]]))

print(s.leastBricks([[1],[1],[1]]))

