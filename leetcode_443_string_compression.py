# -*- coding: utf-8 -*-
"""Leetcode 443 String Compression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12Qq2mTC02z4WK-E_u_QsLhND8YwEGhCI
"""

class Solution:
    def compress(self, chars):
        res = ''
        i = 0
        while i < len(chars):
            res += chars[i]
            count = 1
            j = i+1
            while j<len(chars):
                if chars[j] == chars[i]:
                    count+=1
                    j += 1
                else:
                    break
            if count > 1:
                res += str(count)
            i = j  
        while chars:
            chars.pop()
        for r in res:
            chars.append(r)
        #for testing purpose
        #Leetcode asks to return the length only
        return (len(res),chars)

s = Solution()

print(f'Output: {s.compress(chars = ["a","a","b","b","c","c","c"])}')

