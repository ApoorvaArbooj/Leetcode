# -*- coding: utf-8 -*-
"""Leetcode 101 Symmetric Tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lEog-VKI5Bwsodo1cFaXX0voXob9owRe
"""

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:
        return self.mirror(root,root)
        
    def mirror(self,left,right):
        if left is None and right is None:
            return True
        if left is None or right is None:
            return False
        return left.val == right.val and self.mirror(left.left,right.right) and self.mirror(left.right,right.left)