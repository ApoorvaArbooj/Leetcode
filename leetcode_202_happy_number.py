# -*- coding: utf-8 -*-
"""Leetcode 202 Happy Number.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ao17sKjXqNwMPXf2AOqXvMVn6Qdm8cLQ
"""

class Solution:
    def isHappy(self, n: int) -> bool:
        slow_pointer = n
        fast_pointer = self.get_next_num(n)
        while fast_pointer != 1 and slow_pointer != fast_pointer:
            slow_pointer = self.get_next_num(slow_pointer)
            fast_pointer = self.get_next_num(self.get_next_num(fast_pointer))
        return fast_pointer == 1
    
    def get_next_num(self, number):
        num_sum = 0
        while number > 0:
            number,digit = divmod(number,10)
            num_sum += digit**2
        return num_sum

s = Solution()

print(f'Output: {s.isHappy(19)}')

print(f'Output: {s.isHappy(7)}')

print(f'Output: {s.isHappy(2)}')

